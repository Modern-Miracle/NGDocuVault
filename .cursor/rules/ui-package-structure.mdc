---
description: 
globs: 
alwaysApply: false
---
# UI Package Structure

The UI package contains shared React components that can be used across different applications in the monorepo.

## Core Structure

- **[packages/ui/src/](mdc:packages/ui/src)**: Main source code directory
  - **[packages/ui/src/components/](mdc:packages/ui/src/components)**: Reusable UI components
  - **[packages/ui/src/hooks/](mdc:packages/ui/src/hooks)**: React hooks for UI functionality
  - **[packages/ui/src/styles/](mdc:packages/ui/src/styles)**: Styling utilities and global styles
  - **[packages/ui/src/types/](mdc:packages/ui/src/types)**: TypeScript type definitions
  - **[packages/ui/src/utils/](mdc:packages/ui/src/utils)**: Utility functions for UI components

## Configuration Files

- **[packages/ui/package.json](mdc:packages/ui/package.json)**: Package dependencies and scripts
- **[packages/ui/tsconfig.json](mdc:packages/ui/tsconfig.json)**: TypeScript configuration
- **[packages/ui/components.json](mdc:packages/ui/components.json)**: Component configuration
- **[packages/ui/postcss.config.mjs](mdc:packages/ui/postcss.config.mjs)**: PostCSS configuration for styling

## Key Features

- Reusable React components with consistent styling
- Responsive design support
- Accessibility compliance
- Theme customization
- Integration with form libraries
- Comprehensive type definitions

## Component Categories

- **Layout Components**: Containers, grids, and layout utilities
- **Form Components**: Input fields, checkboxes, radio buttons, selectors
- **Navigation Components**: Menus, tabs, breadcrumbs
- **Feedback Components**: Alerts, notifications, progress indicators
- **Data Display Components**: Tables, cards, lists
- **Modal Components**: Dialogs, drawers, popovers
- **Typography Components**: Headings, paragraphs, text styles

## Development Guidelines

- Build components with a focus on reusability and composability
- Implement proper accessibility (ARIA attributes, keyboard navigation)
- Provide comprehensive prop documentation
- Design for responsiveness and different viewports
- Maintain consistent styling using design tokens
- Follow atomic design principles where applicable
