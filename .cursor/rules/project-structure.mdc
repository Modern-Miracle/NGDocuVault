---
description: 
globs: 
alwaysApply: true
---
# Project Structure

This project is a Turborepo monorepo containing multiple applications and shared packages that work together in a cohesive ecosystem.

## Root Directory

- [package.json](mdc:package.json): Root package configuration, defines workspace-wide scripts and dependencies
- [pnpm-workspace.yaml](mdc:pnpm-workspace.yaml): Defines workspace package locations
- [turbo.json](mdc:turbo.json): Turborepo configuration for task pipelines
- [tsconfig.json](mdc:tsconfig.json): Base TypeScript configuration
- [.eslintrc.js](mdc:.eslintrc.js): ESLint configuration
- Shell scripts:
  - [run-app.sh](mdc:run-app.sh): Script for running the overall applications

## Applications (apps/)

The project contains several applications:

- **[apps/web/](mdc:apps/web)**: Main web application frontend built with Next.js
- **[apps/web2/](mdc:apps/web2)**: Secondary web application React19 and react-router-dom
- **[apps/api/](mdc:apps/api)**: API server application - Express Application
- **[apps/contract/](mdc:apps/contract)**: Smart contract application
- **[apps/docs/](mdc:apps/docs)**: Documentation site built with Next.js

## Shared Packages (packages/)

Shared libraries and configurations:

- **UI Related**:
  - **[packages/ui/](mdc:packages/ui)**: Shared React component library
  
- **GraphQL Related**:
  - **[packages/graphql-schema-codegen/](mdc:packages/graphql-schema-codegen)**: Code generation from GraphQL schema
  - **[packages/graphql-client-codegen/](mdc:packages/graphql-client-codegen)**: Client code generation for GraphQL
  - **[packages/subgraph/](mdc:packages/subgraph)**: Subgraph for blockchain data indexing

- **Blockchain Related**:
  - **[packages/abi/](mdc:packages/abi)**: Blockchain contract ABIs (Application Binary Interfaces)

- **Authentication**:
  - **[packages/auth/](mdc:packages/auth)**: Authentication utilities and services

- **Configuration Packages**:
  - **[packages/typescript-config/](mdc:packages/typescript-config)**: Shared TypeScript configurations
  - **[packages/eslint-config/](mdc:packages/eslint-config)**: Shared ESLint configurations

## Development Environment

- **[.vscode/](mdc:.vscode)**: VS Code configuration
- **[.cursor/](mdc:.cursor)**: Cursor editor configuration and rules

## Workflow and Architecture Rules

Other important rules to understand the project:
- [.cursor/rules/api-structure.mdc](mdc:.cursor/rules/api-structure.mdc): API structure guidelines
- [.cursor/rules/authentication-flows.mdc](mdc:.cursor/rules/authentication-flows.mdc): Authentication flow details
- [.cursor/rules/did-operations.mdc](mdc:.cursor/rules/did-operations.mdc): DID (Decentralized Identifier) operations
- [.cursor/rules/error-handling.mdc](mdc:.cursor/rules/error-handling.mdc): Error handling practices
- [.cursor/rules/frontend-integration.mdc](mdc:.cursor/rules/frontend-integration.mdc): Frontend integration guidelines
- [.cursor/rules/backend.routes.md](mdc:.cursor/rules/backend.routes.md): Backend routing structure
