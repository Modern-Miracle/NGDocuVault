/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AgeVerifier,
  AgeVerifierInterface,
} from "../../verifiers/AgeVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "_pubSignals",
        type: "uint256[4]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576105e7908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c635fe8c13b1461002857600080fd5b3461031757610180806003193601126103135790610107916100493661031a565b6100523661033a565b9061005c3661032c565b606061006736610347565b9361040060405261010c853561007c81610356565b602099876101028c809a013561009181610356565b6100fd886040850135946100a486610356565b0135956100b087610356565b7f18d48ae78682408689cba53f44b7220d56cb1806c821027369d089343fc1cfba6080527f0c5a6b50e904d3b83c9c7e341534c3f80c519462eb57131534d70e76d917635460a052610389565b610413565b61049d565b610527565b61010095848795358652867f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479101358103066101205281356101405285820135610160526040820135905201356101a0527f1502d87bbedb8c1a98a7241c430bfba61e3a91c75333ec4c11c6e8da05512f236101c0527f20e3b257abefd0d8c5b42401c23796c41a40b98caaa93692a8e83aa5498c88bc6101e0527f0a76a200c84671bc6e998ad19faa52a8978c6bf4e65c479b86a6c06a26ac01bb610200527e52016a06634011afdc967f896d48878e9d30763b021bfb493cc6646322fb3d610220527f2c1b3c2c413141c395b3391e2052deaec83720b6a661e554d723b607c9eb659e610240527f25ab46b53137390d65cb6951144e84d998ec75b7be5d34692e5a9fbdc5071987610260526080516102805260a0516102a0527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c290816102c0527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed806102e0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b9061030093828552867f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa948561032052803561034052013561036052610380526103a0526103c0526103e0528160086107cf195a01fa9051168152f35b5080fd5b80fd5b9060049160441161032757565b600080fd5b9060c4916101041161032757565b9060449160c41161032757565b90610104916101841161032757565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001111561037f57565b6000805260206000f35b604051907f011256e59c53e1e82e2ec89a6193482b2da6158545cd3133f1bf728035ec6d1882527f117b8c700724e65c7e60a126513b2ee3b1411600da54cd104c1fedf313d9aae06020830152604082019081526107cf196040836060816007855a01fa1561037f5760409260066080939284938451905260a05160608401525a01fa1561037f57565b604051907f102534149913a3bff34de0b4743e9cd7aa72ad538fd048e72d7c816c2799288a82527f167ac8b998b8f96d09e994c6780d72af9e7b745c11d833f9707893cb20711e1a6020830152604082019081526107cf196040836060816007855a01fa1561037f5760409260066080939284938451905260a05160608401525a01fa1561037f57565b604051907f0ab43eeb27da5107e46bf4bd7470575ebb71d43cd91d841aaabd5ae0fc5ced1382527f2592429cad9d7e0c90717855863afc89561a2266a9e224cf882035dae99424046020830152604082019081526107cf196040836060816007855a01fa1561037f5760409260066080939284938451905260a05160608401525a01fa1561037f57565b604051907f302d1e016b3f71d3240e112a5fa0cb5c6c3bbf3c0475510a9eaf394a8199504682527f0fe36944ef3429beeee532cc722ef999ac2fec5a33a8aa76a4c3bc9f95df6eb56020830152604082019081526107cf196040836060816007855a01fa1561037f5760409260066080939284938451905260a05160608401525a01fa1561037f5756fea2646970667358221220d0477282adce67559bc59372b8afcea6c75cf8e601bb06bfb0ca471b479fdc2964736f6c63430008140033";

type AgeVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgeVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgeVerifier__factory extends ContractFactory {
  constructor(...args: AgeVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AgeVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AgeVerifier__factory {
    return super.connect(runner) as AgeVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgeVerifierInterface {
    return new Interface(_abi) as AgeVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AgeVerifier {
    return new Contract(address, _abi, runner) as unknown as AgeVerifier;
  }
}
